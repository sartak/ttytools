#!/usr/bin/perl

# Copyright (c) 2006 Shawn M Moore

# Permission is hereby granted, free of charge, to any person obtaining a copy 
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights 
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
# copies of the Software, and to permit persons to whom the Software is 
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in 
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

use strict;
use warnings;

die "Usage: $0 <ttyrec> <script>" if @ARGV != 2;

my @script;

{
  local @ARGV = pop @ARGV;
  my $file = $ARGV[0];

  while (<>)
  {
    # C++-style line comments are used because they're much rarer than #
    s{//.*}{};
    # ignore blank lines
    next unless /\S/;

    s/\s//g;

    my ($target, $rest) = /^(\d+(?:-\d+)?|\*)(.*)$/;
    foreach (split /;/, $rest)
    {
      next unless my ($action, $num) = /^(.)(\d*(?:.\d*)?)$/;
      die "$file:$.: Unknown action '$action'." unless exists $dispatch{$action};

      if ($target =~ /^(\d+)-(\d+)$/)
      {
        push @script, [[$1, $2], $action, $num];
      }
      else
      {
        push @script, [[$target, $target], $action, $num];
      }
    }
  }
}

